extern abs   :: "std.so" :: (double) -> double;
extern sin   :: "std.so" :: (double) -> double;
extern cos   :: "std.so" :: (double) -> double;
extern tan   :: "std.so" :: (double) -> double;
extern asin  :: "std.so" :: (double) -> double;
extern acos  :: "std.so" :: (double) -> double;
extern atan  :: "std.so" :: (double) -> double;
extern simplelog :: "std.so" :: (double) -> double;
extern complexlog :: "std.so" :: (double, double) -> double;
extern floor :: "std.so" :: (double) -> double;
extern round :: "std.so" :: (double) -> double;
extern ceil  :: "std.so" :: (double) -> double;
extern tonumber :: "std.so" :: (string) -> double;
extern tostring :: "std.so" :: (double) -> string;
shine extern fopen :: "std.so" :: (string) -> table;

var __privateflags = {
    simplelog: simplelog,
    complexlog: complexlog,
    tostring: tostring,
    tonumber: tonumber,
}

shine var math = {
    abs   : abs,
    sin   : sin,
    cos   : cos,
    tan   : tan,
    asin  : asin,
    acos  : acos,
    atan  : atan,
    log   : fn(x, y) {
        if y == null
            return __privateflags.simplelog(x);
        else 
            return __privateflags.complexlog(x, y);
    },
    floor : floor,
    round : round,
    ceil  : ceil,
    e: 2.71828182845904523536,
    pi: 16 * atan(1 / 5) - 4 * atan(1 / 239)
}

delete tonumber;
delete tostring;

shine fn tostring(s) {
    var type = typeof(s);
    if type == "string" return s;
    else return __privateflags.tostring(s);
}

shine fn tonumber(x) {
    var type = typeof(x);
    if type == "number" return x;
    else return __privateflags.tonumber(x);
}

delete abs;
delete sin;
delete cos;
delete tan;
delete asin;
delete acos;
delete atan;
delete simplelog;
delete complexlog;
delete floor;
delete round;
delete ceil;
